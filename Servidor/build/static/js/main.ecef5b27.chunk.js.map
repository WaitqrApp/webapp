{"version":3,"sources":["components/logo_waitqr.png","context/restaurantes/restauranteContext.js","context/mesas/mesasContext.js","context/sesionesGenerales/sesionGeneralContext.js","context/sesionesIndividuales/sesionIndividualContext.js","components/Welcome.js","components/Menu/picana-t.jpg","context/menus/menusContext.js","context/secciones/seccionesContext.js","context/platillos/platillosContext.js","components/papas-gajo.jpg","components/MenuPlatillo.js","components/Menu.js","components/MenuDigital.js","components/Buttons/BackButton.js","context/ordenes/ordenContext.js","context/platillosOrdenados/platilloOrdenadoContext.js","components/DetallePlatillo.js","components/Buttons/BackButtonOrden.js","components/Orden.js","components/Estatus.js","types/index.js","context/restaurantes/restauranteReducer.js","config/axios.js","context/restaurantes/restauranteState.js","context/mesas/mesasReducer.js","context/mesas/mesasState.js","context/menus/menusReducer.js","context/menus/menusState.js","context/secciones/seccionesReducer.js","context/secciones/seccionesState.js","context/platillos/platillosReducer.js","context/platillos/platillosState.js","context/sesionesGenerales/sesionGeneralReducer.js","context/sesionesGenerales/sesionGeneralState.js","context/sesionesIndividuales/sesionIndividualReducer.js","context/sesionesIndividuales/sesionIndividualState.js","context/ordenes/ordenReducer.js","context/ordenes/ordenState.js","context/platillosOrdenados/platilloOrdenadoReducer.js","context/platillosOrdenados/platilloOrdenadoState.js","App.js","index.js"],"names":["restauranteContext","createContext","mesaContext","sesionGeneralContext","sesionIndividualContext","Welcome","history","useHistory","restaurantesContext","useContext","restaurantes","obtenerUnRestaurante","guardarRestauranteActual","mesassContext","mesasContext","mesasrestaurante","mesa","obtenerMesas","guardarMesaActual","sesionGeneralsContext","sesiongeneralmesa","obtenerSesionGeneral","agregarSesionGeneral","sesionIndividualsContext","sesionindividualsesiongeneral","obtenerSesionIndividual","agregarSesionIndividual","useState","error","guardarError","restauranteId","mesaId","seleccion","horarioInicio","restaurante","sesionGeneralAux","mesaNombre","formulario","guardarFormulario","sesionGeneral","useEffect","_id","Container","fluid","className","Row","Col","nombre","Form","Control","onChange","e","target","name","value","obj","JSON","parse","console","log","title","as","map","stringify","numero","id","Button","onClick","localStorage","getItem","push","length","setItem","Date","toLocaleString","timeZone","Card","Img","variant","src","Logo","menuContext","seccionContext","platillosContext","MenuPlatillo","seccionSeleccionada","platillossContext","platillosseccion","obtenerPlatillos","platillo","guardarPlatilloActual","filter","disponible","xs","to","imagenPlatillo","descripcion","precio","Menu","menu","menussContext","menusContext","seccionessContext","menusrestaurante","obtenerMenus","guardarMenuActual","seccionesContext","seccionesmenu","seccion","obtenerSecciones","guardarSeccionActual","guardarSeccionSeleccionada","Accordion","defaultActiveKey","Toggle","Header","eventKey","seleccionarSeccion","Collapse","Body","MenuDigital","menuEscogido","guardarMenuEscogido","sesionIndividualAux","InputGroup","Prepend","Text","type","placeholder","style","flex","Pica√±a","Title","Badge","DropdownButton","Dropdown","Item","seleccionarMenu","BackButton","ordenContext","platilloOrdenadoContext","DetallePlatillo","ordensContext","agregarOrden","ordensesionindividual","obtenerOrdenSesionIndividual","agregarPlatilloOrdenado","cantidad","platilloPedido","guardarPlatilloPedido","sesionIndividual","ordenAux","comentario","platilloId","orden","platilloOrdenadoAux","handleChange","guardarPlatilloEnOrdenLocal","sm","ImgOverlay","Group","Label","rows","BackButtonOrden","Orden","platillosOrdenadossContext","platilloOrdenadoOrden","obtenerPlatilloOrdenado","actualizarPlatilloOrdenado","total","decreaseCount","parseInt","increaseCount","Estatus","OBTENER_UN_RESTAURANTE","OBTENER_RESTAURANTES","RESTAURANTE_ACTUAL","MENUS_RESTAURANTE","MENU_ACTUAL","MESAS_RESTAURANTE","MESA_ACTUAL","LIMPIAR_MESA","SECCIONES_MENU","AGREGAR_SECCION","VALIDAR_SECCION","ELIMINAR_SECCION","SECCION_ACTUAL","ACTUALIZAR_SECCION","LIMPIAR_SECCION","PLATILLOS_SECCION","AGREGAR_PLATILLO","VALIDAR_PLATILLO","ELIMINAR_PLATILLO","PLATILLO_ACTUAL","ACTUALIZAR_PLATILLO","LIMPIAR_PLATILLO","SESIONGENERAL_MESA","AGREGAR_SESIONGENERAL","VALIDAR_SESIONGENERAL","ELIMINAR_SESIONGENERAL","SESIONGENERAL_ACTUAL","ACTUALIZAR_SESIONGENERAL","LIMPIAR_SESIONGENERAL","SESIONINDIVIDUAL_SESIONGENERAL","AGREGAR_SESIONINDIVIDUAL","VALIDAR_SESIONINDIVIDUAL","ELIMINAR_SESIONINDIVIDUAL","SESIONINDIVIDUAL_ACTUAL","ACTUALIZAR_SESIONINDIVIDUAL","LIMPIAR_SESIONINDIVIDUAL","ORDEN_SESIONINDIVIDUAL","ORDEN_RESTAURANTE","AGREGAR_ORDEN","VALIDAR_ORDEN","ELIMINAR_ORDEN","ORDEN_ACTUAL","ACTUALIZAR_ORDEN","LIMPIAR_ORDEN","PLATILLOORDENADO_ORDEN","AGREGAR_PLATILLOORDENADO","VALIDAR_PLATILLOORDENADO","ELIMINAR_PLATILLOORDENADO","PLATILLOORDENADO_ACTUAL","ACTUALIZAR_PLATILLOORDENADO","LIMPIAR_PLATILLOORDENADO","state","action","payload","clienteAxios","axios","create","baseURL","process","REACT_APP_BACKEND_URL","RestauranteState","props","useReducer","restauranteReducer","errorformulario","mensaje","dispatch","obtenerRestaurantes","a","get","resultado","data","msg","categoria","params","Provider","mostrarFormulario","mostrarError","children","mesaseleccionada","MesaState","MesaReducer","errormesa","mesas","limpiarMesa","MenuState","MenuReducer","errormenu","menuseleccionado","menus","menuId","limpiarMenu","errorseccion","seccionseleccionada","SeccionState","SeccionReducer","secciones","agregarSeccion","post","eliminarSeccion","delete","timeLog","actualizarSeccion","put","validarSeccion","seccionId","limpiarSeccion","errorplatillo","platilloseleccionado","PlatilloState","PlatilloReducer","platillos","agregarPlatillo","eliminarPlatillo","actualizarPlatillo","validarPlatillo","limpiarPlatillo","errorsesiongeneral","sesiongeneral","sesiongeneralseleccionada","SesionGeneralState","SesionGeneralReducer","sesionesGenerales","eliminarSesionGeneral","actualizarSesionGeneral","validarSesionGeneral","guardarSesionGeneralActual","sesiongeneralId","limpiarSesionGeneral","errorsesionindividual","sesionindividual","sesionindividualseleccionada","SesionIndividualState","SesionIndividualReducer","sesionesIndividuales","eliminarSesionIndividual","actualizarSesionIndividual","validarSesionIndividual","guardarSesionIndividualActual","sesionindividualId","limpiarSesionIndividual","ordenrestaurante","errororden","ordenseleccionada","OrdenState","OrdenReducer","ordenes","obtenerOrdenRestaurante","eliminarOrden","actualizarOrden","validarOrden","guardarOrdenActual","ordenId","limpiarOrden","errorplatilloordenado","platilloOrdenado","platilloordenadoseleccionado","PlatilloOrdenadoState","PlatilloOrdenadoReducer","platilloordenado","platillosOrdenados","eliminarPlatilloOrdenado","validarPlatilloOrdenado","guardarPlatilloOrdenadoActual","platilloordenadoId","limpiarPlatilloOrdenado","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecef5b27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_waitqr.479233c3.png\";","import {createContext} from 'react';\n\nconst restauranteContext = createContext();\n\nexport default restauranteContext;","import {createContext} from 'react';\nconst mesaContext = createContext();\nexport default mesaContext;","import {createContext} from 'react';\nconst sesionGeneralContext = createContext();\nexport default sesionGeneralContext;","import {createContext} from 'react';\nconst sesionIndividualContext = createContext();\nexport default sesionIndividualContext;","import React, {useContext, useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Form, Button, Card, Container } from 'react-bootstrap';\nimport \"./styles.css\"\nimport Logo from './logo_waitqr.png';\n\nimport restauranteContext from '../context/restaurantes/restauranteContext';\nimport mesasContext from '../context/mesas/mesasContext';\nimport sesionGeneralContext from '../context/sesionesGenerales/sesionGeneralContext';\nimport sesionIndividualContext from '../context/sesionesIndividuales/sesionIndividualContext';\n\nimport { useHistory } from \"react-router-dom\";\n\nfunction Welcome() {\n\n    let history = useHistory();\n //Extraer restaurantes de state inicial\n const restaurantesContext = useContext(restauranteContext);\n const { restaurantes, obtenerUnRestaurante, guardarRestauranteActual} = restaurantesContext;\n\n const mesassContext = useContext(mesasContext);\n const { mesasrestaurante, mesa, obtenerMesas, guardarMesaActual} = mesassContext;\n\n const sesionGeneralsContext = useContext(sesionGeneralContext);\n const {sesiongeneralmesa, obtenerSesionGeneral, agregarSesionGeneral} = sesionGeneralsContext;\n \n const sesionIndividualsContext = useContext(sesionIndividualContext);\n const { sesionindividualsesiongeneral, obtenerSesionIndividual, agregarSesionIndividual} = sesionIndividualsContext;\n\n const[error, guardarError] = useState(false)\n\n\n const [seleccion, guardarSeleccion] = useState({\n     restauranteId: \"\",\n     mesaId:\"\"\n })\n\n const [ sesionGeneralAux, guardarSesionGeneralAux] = useState({\n\n     horarioInicio: '',\n     mesa: '',\n     restaurante:''\n })\n\n \n\n const [formulario, guardarFormulario] = useState({\n     mesaNombre : ''\n })\n\n const {mesaNombre} = formulario\n\n\n\n const {restauranteId, mesaId} = seleccion\n\n const [ sesionIndividualAux, guardarSesionIndividualAux] = useState({\n    \n    horarioInicio: '',\n    sesionGeneral: '',\n    restaurante:''\n})\n\n\n useEffect(() => {\n    obtenerUnRestaurante(\"5fd817645515ba5728db0adc\");\n    obtenerMesas(\"5fd817645515ba5728db0adc\");\n    obtenerSesionGeneral(sesionGeneralAux.mesa)\n\n    \n}, []); //para que corra solo una vez\n\nseleccion.restauranteId = restaurantes._id\n\n//leer los valores del formulario\n\nconst handleChange = e => {\n    guardarFormulario({\n        ...formulario,\n        [e.target.name]: e.target.value\n      })\n    let obj = JSON.parse(e.target.value);\n    guardarMesaActual(obj._id)\n    sesionGeneralAux.mesa = obj._id\n    guardarRestauranteActual(\"5fd817645515ba5728db0adc\")\n    console.log(mesa)\n    \n  };\n\n  const revisarFormulario = e =>{\n      console.log(\"presione el boton\")\n    if(formulario.mesaNombre === ''){\n      guardarError(true);\n      return\n      \n    }\n    if(!localStorage.getItem('sesiongenerallocal')){ //si no hay sesiongenerallocal\n        if(sesiongeneralmesa.length>0){\n          \n            localStorage.setItem('mesalocal', sesionGeneralAux.mesa);\n            //localStorage.setItem('sesiongeneralid', sesiongeneralmesa[0]._id);\n            sesiongeneralmesa.length = 0;\n            obtenerSesionGeneral(sesionGeneralAux.mesa)\n            console.log(\"ya la mande a cero \"+ sesiongeneralmesa.length )\n            history.push(\"/MenuDigital\");\n        }\n        else{\n            sesionGeneralAux.horarioInicio = new Date().toLocaleString(\"en-GB\", {timeZone: 'America/Mexico_City'})\n            sesionGeneralAux.restaurante =  restaurantes._id\n            agregarSesionGeneral(sesionGeneralAux)\n            localStorage.setItem('mesalocal', sesionGeneralAux.mesa);\n            sesiongeneralmesa.length = 0;\n            obtenerSesionGeneral(sesionGeneralAux.mesa)\n            console.log(\"ya la mande a cero \"+ sesiongeneralmesa.length )\n\n            history.push(\"/MenuDigital\");\n        }\n              \n             \n          }\n    else\n    {\n        history.push(\"/MenuDigital\");\n    }\n    \n          \n          \n      \n      \n    }\n\n\n\n    return (\n        <Container fluid className=\"bienvenido\">\n            <Row>\n                <Col>\n                    <h3>Bienvenido a</h3>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <h1>{restaurantes.nombre}</h1>\n                </Col>\n            </Row>\n            <Form >\n            <Row className=\"align-middle\">\n                <h2>Confirma tu mesa</h2>\n            </Row>\n            <Row>\n                <Col className=\"mesa\">\n                \n                <Form.Control\n                onChange={handleChange}\n                name=\"mesaNombre\"\n                className=\"mesa\" title=\"mesa 1\" as=\"select\">\n                <option>Selecciona una mesa</option>\n                {mesasrestaurante.map(mesa => (\n\n                                <option\n                                key={mesa._id}\n                                value = {JSON.stringify(mesa)}\n                                >{mesa.numero}</option>\n                                ))}          \n                </Form.Control>\n                 \n                </Col>\n                \n\n            </Row>\n            {error?\n                <div className=\"text-center mt-4\">\n                    <p id=\"alerta \">Falto seleccionar una mesa</p>\n                </div>\n                : null}\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Row>\n                <Col className=\"boton-ordenar\">\n                   \n                    \n                        <Button  className=\"confirmar mt-3\" onClick={() => revisarFormulario()}>Confirmar</Button>\n                    \n                </Col>\n            </Row>\n            </Form>\n            <Row>\n                <Col className=\"boton-logo\">\n                    <Card.Img className=\"logo\" variant=\"top\" src={Logo} />\n                </Col>\n            </Row>\n        </Container>\n\n    );\n}\n\nexport default Welcome;","export default __webpack_public_path__ + \"static/media/picana-t.b08aab4b.jpg\";","import {createContext} from 'react';\nconst menuContext = createContext();\nexport default menuContext;","import {createContext} from 'react';\nconst seccionContext = createContext();\nexport default seccionContext;","import {createContext} from 'react';\nconst platillosContext = createContext();\nexport default platillosContext;","export default __webpack_public_path__ + \"static/media/papas-gajo.f540fc8b.jpg\";","import React, { useEffect, useContext, useState } from \"react\";\nimport {\n  Form,\n  Card,\n  Col,\n  Row,\n  Accordion,\n  Badge,\n  Container,\n  InputGroup,\n} from \"react-bootstrap\";\nimport Papas from \"./papas-gajo.jpg\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport platillosContext from \"../context/platillos/platillosContext\";\n\nfunction MenuPlatillo({ seccionSeleccionada }) {\n  console.log(\"llego esta seccion \" + seccionSeleccionada.nombre);\n  const platillossContext = useContext(platillosContext);\n  const {\n    platillosseccion,\n    platillo,\n    obtenerPlatillos,\n    guardarPlatilloActual,\n  } = platillossContext;\n\n  useEffect(() => {\n    obtenerPlatillos(seccionSeleccionada._id);\n  }, [seccionSeleccionada]);\n\n  //TO-DO\n  //Mover ese Link para no perder el CSS, ahorita es meramente funcional\n\n  return (\n    <Container className=\"contenedor-platillo\">\n      {platillosseccion\n        .filter((platillo) => platillo.disponible)\n        .map((platillo) => (\n          <Row>\n            <Col xs={3} onClick={() => guardarPlatilloActual(platillo)}>\n              <Link to={\"/DetallePlatillo\"}>\n                <Card.Img\n                  className=\"imagen-platillo img-fluid mt-4\"\n                  variant=\"top\"\n                  src={platillo.imagenPlatillo}\n                />\n              </Link>\n            </Col>\n            <Col xs={6} onClick={() => guardarPlatilloActual(platillo)}>\n              <Link to={\"/DetallePlatillo\"}>\n                <h3 className=\"mt-3\">{platillo.nombre}</h3>\n                <p>{platillo.descripcion}</p>\n              </Link>\n            </Col>\n            <Col xs={3} onClick={() => guardarPlatilloActual(platillo)}>\n              <Link to={\"/DetallePlatillo\"}>\n                <h3 className=\"mt-3\">${platillo.precio}</h3>\n              </Link>\n            </Col>\n          </Row>\n        ))}\n    </Container>\n  );\n}\n\nexport default MenuPlatillo;\n","import React, {useEffect, useContext, useState} from 'react';\nimport { Form, Card, Col, Row, Accordion, Badge, Container, InputGroup } from 'react-bootstrap';\n\n\nimport menusContext from '../context/menus/menusContext';\nimport seccionesContext from '../context/secciones/seccionesContext';\nimport MenuPlatillo from './MenuPlatillo';\n\nfunction Menu({menu}){\n\n    const menussContext = useContext(menusContext);\n    const { menusrestaurante, obtenerMenus, guardarMenuActual } = menussContext;\n\n    //obtener la funcion del context de seccion\n  const seccionessContext = useContext(seccionesContext);\n  const {seccion,seccionesmenu, obtenerSecciones, guardarSeccionActual} = seccionessContext;\n\n  useEffect(() => {\n    obtenerSecciones(menu[0]._id);\n  }, [menu]);\n\n  const [seccionSeleccionada, guardarSeccionSeleccionada] = useState({});\n\n  const seleccionarSeccion = seccion =>{\n    console.log(\"seleccione:\" + seccion.nombre)\n    guardarSeccionActual(seccion._id)\n    guardarSeccionSeleccionada(seccion)\n    console.log(\"seccionSeleccionada\" + seccionSeleccionada.nombre)\n}\n\n\n\n    return(\n        <>\n    <Accordion defaultActiveKey=\"0\">\n        {seccionesmenu.map(seccion => (\n        <Card>\n        \n          <Accordion.Toggle as={Card.Header}  key={seccion._id}  eventKey={seccion._id} onClick={() => seleccionarSeccion(seccion)}>\n            <h3 className=\"mt-2\">{seccion.nombre}</h3>\n          </Accordion.Toggle>\n          <Accordion.Collapse key={seccion._id}  eventKey={seccion._id}>\n            <Card.Body>\n              <MenuPlatillo\n              seccionSeleccionada = {seccionSeleccionada}\n              />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        ))}\n        \n      </Accordion>\n      <br/><br/>\n          </>\n\n    );\n  \n}\n\nexport default Menu;","import React, {useEffect, useContext, useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Card, Col, Row, Accordion, Badge, Container, InputGroup, DropdownButton, Dropdown } from 'react-bootstrap';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Pica√±a from './Menu/picana-t.jpg';\n\nimport restauranteContext from '../context/restaurantes/restauranteContext';\nimport mesasContext from '../context/mesas/mesasContext';\nimport menusContext from '../context/menus/menusContext';\nimport sesionGeneralContext from '../context/sesionesGenerales/sesionGeneralContext';\nimport sesionIndividualContext from '../context/sesionesIndividuales/sesionIndividualContext';\n\nimport Menu from './Menu';\n\nimport './Menu/menucliente.css'\nimport Papas from \"./papas-gajo.jpg\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nimport \"./Menu/menucliente.css\";\nimport { Divider } from \"@material-ui/core\";\n\n\nfunction MenuDigital() {\n\n   //Extraer restaurantes de state inicial\n const restaurantesContext = useContext(restauranteContext);\n const { restaurantes, restaurante, obtenerUnRestaurante, guardarRestauranteActual} = restaurantesContext;\n\n const mesassContext = useContext(mesasContext);\n const { mesasrestaurante, mesa, obtenerMesas, guardarMesaActual} = mesassContext;\n\n const menussContext = useContext(menusContext);\n    const { menusrestaurante, menu, obtenerMenus, guardarMenuActual } = menussContext;\n\n    const sesionGeneralsContext = useContext(sesionGeneralContext);\n    const { sesiongeneralmesa, obtenerSesionGeneral, agregarSesionGeneral} = sesionGeneralsContext;\n\n    const sesionIndividualsContext = useContext(sesionIndividualContext);\n    const { sesionindividualsesiongeneral, obtenerSesionIndividual, agregarSesionIndividual} = sesionIndividualsContext;\n\n  \n\n\n    const [menuEscogido, guardarMenuEscogido] = useState('');\n\n    const [ sesionIndividualAux, guardarSesionIndividualAux] = useState({\n    \n      horarioInicio: '',\n      sesionGeneral: '',\n      restaurante:''\n  })\n\n useEffect(() => {\n  \n  obtenerMenus(restaurante)\n  obtenerSesionGeneral(mesa[0]._id);\n  \n  \n},[]);\nlocalStorage.setItem('restaurantelocal', restaurante);\nconsole.log(sesiongeneralmesa)\n\n\n\n\n\n\n//Funcion para agregar el menu actual\nconst seleccionarMenu = menu => {\n  guardarMenuActual(menu._id); //fijar un menu actual\n  guardarMenuEscogido(menu.nombre);\n  console.log(sesiongeneralmesa)\n\n \n  if(sesiongeneralmesa.length>0){\n    if(!localStorage.getItem('sesionindividualid')){\n  \n      sesionIndividualAux.horarioInicio = new Date().toLocaleString(\"en-GB\", {timeZone: 'America/Mexico_City'})\n      sesionIndividualAux.restaurante =  restaurantes._id\n      console.log(sesiongeneralmesa)\n  \n      sesionIndividualAux.sesionGeneral =  sesiongeneralmesa[0]._id\n    \n      console.log(JSON.stringify(sesionIndividualAux.sesionGeneral))\n     \n    \n      agregarSesionIndividual(sesionIndividualAux)\n      \n      \n      \n    \n    }\n  }\n}\n\n\n\n\n\n\n\n\n  return (\n    \n    <div className=\"menu-principal\">\n      <h1>{restaurantes.nombre}</h1>\n      <p>{mesa[0].numero}</p>\n      <Link to={\"/Orden\"}>\n        <ShoppingCartIcon className=\"carrito-menu\" />\n      </Link>\n\n      <InputGroup className=\"searchbar\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">\n            <SearchIcon />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control type=\"text\" placeholder=\"Busca un platillo\" />\n      </InputGroup>\n\n      <h2>Lo m√°s recomendado</h2>\n     \n        <Card className=\"mb-4\" style={{ flex: 1 }}>\n        <Link to={'/DetallePlatillo'}>\n          <Card.Img variant=\"top\" src={Pica√±a} />\n          <Card.Body>\n            <Card.Title>\n              <Row>\n                <Col className=\"ml-n2\">\n                  <h2>Pica√±a Haye</h2>\n                </Col>\n                <Col>\n                  <Badge className=\"badge ml-4\" variant=\"primary\">El m√°s pedido</Badge>\n                </Col>\n              </Row>\n            </Card.Title>\n            <Card.Text>\n              <p1>Deliciosa Pica√±a Haye</p1>\n            </Card.Text>\n            <Card.Text>\n              <p1>$365.00</p1>\n            </Card.Text>\n          </Card.Body>\n          </Link>\n        </Card>\n\n        <Form >\n            <Row>\n                <Col className=\"mesa\">\n                \n                <DropdownButton\n                >\n                <Dropdown.Item>Selecciona un menu</Dropdown.Item>\n                {\n                menusrestaurante.map(menu => (\n                                <Dropdown.Item\n                                onClick={() => seleccionarMenu(menu)}\n                                >{menu.nombre}</Dropdown.Item>\n                                ))}          \n                </DropdownButton>\n                 \n                </Col>\n            </Row>\n            </Form>\n                  {\n                    menuEscogido ?(\n                      <Menu\n                      menu={menu}\n                    />)\n                    :(<p>Escoge un menu</p>\n                      )\n                      \n                  }\n            \n\n      \n    </div>\n  );\n\n\n\n}\n\nexport default MenuDigital;\n","import React from \"react\";\nimport {  Button, Container } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport '../styles.css'\n\nfunction BackButton() {\n\n    let history = useHistory();\n\n    return (\n        <Container>\n            <Button className=\"boton-back\" onClick={() =>history.push(\"/MenuDigital\")}><ArrowBackIcon/></Button>\n        </Container>\n    );\n}\n\nexport default BackButton;","import {createContext} from 'react';\nconst ordenContext = createContext();\nexport default ordenContext;","import {createContext} from 'react';\nconst platilloOrdenadoContext = createContext();\nexport default platilloOrdenadoContext;","import React, { useEffect, useContext, useState } from 'react'\nimport { Card, Col, Row, Button, Form, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Pica√±a from './Menu/picana-t.jpg';\nimport BackButton from './Buttons/BackButton';\nimport { useHistory } from \"react-router-dom\";\n\n\nimport './styles.css'\n\nimport platillosContext from '../context/platillos/platillosContext';\nimport ordenContext from '../context/ordenes/ordenContext';\nimport restauranteContext from '../context/restaurantes/restauranteContext';\nimport mesasContext from '../context/mesas/mesasContext';\nimport platilloOrdenadoContext from '../context/platillosOrdenados/platilloOrdenadoContext';\n\n\n\nfunction DetallePlatillo() {\n\n    let history = useHistory();\n\n\n    const platillossContext = useContext(platillosContext);\n    const { platillosseccion, platillo, obtenerPlatillos, guardarPlatilloActual } = platillossContext;\n\n    const ordensContext = useContext(ordenContext);\n    const {  ordensesionindividual, obtenerOrdenSesionIndividual, agregarOrden} = ordensContext;\n    const  platillosOrdenadossContext = useContext(platilloOrdenadoContext);\n    const { agregarPlatilloOrdenado} = platillosOrdenadossContext;\n\n    const mesassContext = useContext(mesasContext);\n    const {  mesa} = mesassContext;\n    const restaurantesContext = useContext(restauranteContext);\n const { restaurante} = restaurantesContext;\n\n    const [platilloPedido, guardarPlatilloPedido] = useState({\n        cantidad: \"1\",\n        descripcion: \"\"\n\n    })\n\n    const {cantidad, descripcion} = platilloPedido;\n\n    const [ ordenAux, guardarOrdenAux] = useState({\n\n        sesionIndividual: '',\n        sesionGeneral: '',\n        restaurante:'',\n        mesa:'',\n\n    });\n    const [ platilloOrdenadoAux, guardarPlatilloOrdenadoAux] = useState({\n\n        nombre: '',\n        precio: '',\n        cantidad:'',\n        comentario:'',\n        platilloId:'',\n        orden:'',\n        restaurante:'',\n        sesionIndividual:'',\n        sesionGeneral:'',\n        mesa:'',\n\n    });\n   \n\n    useEffect(() => {\n        if(!localStorage.getItem('ordenid')){\n            ordenAux.sesionIndividual=localStorage.getItem('sesionindividualid');\n            ordenAux.sesionGeneral=localStorage.getItem('sesiongeneralid');\n            ordenAux.restaurante = localStorage.getItem('restaurantelocal');;\n            ordenAux.mesa= localStorage.getItem('mesalocal');\n            agregarOrden(ordenAux)\n            \n         }\n        \n      },[]);\n\n     \n\n\n    const handleChange = e => {\n        guardarPlatilloPedido({\n            ...platilloPedido,\n            [e.target.name]: e.target.value\n          })\n      };\n\n\n   // console.log(\"llego este platillo\" + platillo.nombre)\n\n   const crearPlatilloOrdenado = e =>{\n    platilloOrdenadoAux.nombre = platillo.nombre;\n    platilloOrdenadoAux.precio = platillo.precio;\n    platilloOrdenadoAux.cantidad = cantidad;\n    platilloOrdenadoAux.comentario = descripcion;\n    platilloOrdenadoAux.platilloId = platillo._id;\n    platilloOrdenadoAux.orden = localStorage.getItem('ordenid');\n    platilloOrdenadoAux.restaurante = localStorage.getItem('restaurantelocal');\n    platilloOrdenadoAux.sesionIndividual = localStorage.getItem('sesionindividualid');\n    platilloOrdenadoAux.sesionGeneral = localStorage.getItem('sesiongeneralid');\n    platilloOrdenadoAux.mesa = localStorage.getItem('mesalocal');\n    agregarPlatilloOrdenado(platilloOrdenadoAux)\n    history.push(\"/MenuDigital\")\n   }\n    \n\n    const guardarPlatilloEnOrdenLocal = e => {\n\n        \n         crearPlatilloOrdenado();\n\n           \n         \n\n     \n\n        }\n\n\n    \n    return (\n\n        \n        <Container fluid>\n            <Row>\n                <Col sm={12} className=\"detalle-platillo\">\n                    <Card className=\"platillo\">\n                        <Card.ImgOverlay>\n                            <BackButton className=\"mt-4\"/>\n                        </Card.ImgOverlay>\n                        <Card.Img className=\"imagen-detalle\" variant=\"top\" src={platillo.imagenPlatillo} />\n                        <Card.Body>\n                            <Card.Title className=\"font-weight-bold\">\n                                <h1>{platillo.nombre}</h1>\n                            </Card.Title>\n                            <Card.Text className=\"mt-3\">\n                                <h2>{platillo.descripcion}</h2>\n                            </Card.Text>\n                            <Card.Text className=\"mt-2\">\n                                <h3>${platillo.precio}</h3>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Form className=\"form-cantidad\" \n                 \n                >\n                    <Form.Group className=\"input-cantidad mt-3 ml-4\">\n                            <Form.Label>Cantidad</Form.Label>\n                            <Form.Control className=\"input-cantidad\" as=\"select\"\n                             name=\"cantidad\"\n                             value={cantidad}\n                             onChange={handleChange}>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                            </Form.Control>\n                    </Form.Group>\n                </Form>\n            </Row>\n            <Row>\n                <Form>\n                    <Form.Group className=\"input-notas ml-4\">\n                        <textarea className=\"input-notas-texto form-control\" rows=\"3\" placeholder=\"Notas para la cocina\"\n                        name=\"descripcion\"\n                        value={descripcion}\n                        onChange={handleChange}></textarea>\n                        \n                    </Form.Group>\n                </Form>\n            </Row>\n            <Row>\n                \n                <Col className=\"boton-ordenar\">\n                   {/* <Link to={'/Orden'}> */}\n                        <Button className=\"confirmar\" onClick={() => guardarPlatilloEnOrdenLocal()}>Agregar</Button>\n                     {/*</Link>*/}\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default DetallePlatillo;","import React from \"react\";\nimport { Button, Container, Col } from \"react-bootstrap\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport \"../styles.css\";\n\n\nfunction BackButtonOrden() {\n\n  return (\n    <Container>\n      <Link to={\"/MenuDigital\"}>\n        <Button className=\"boton-back\" >\n          <ArrowBackIcon />\n        </Button>\n      </Link>\n    </Container>\n  );\n}\n\nexport default BackButtonOrden;","import React, { useState,useContext, useEffect } from \"react\";\nimport { Card, Col, Row, Badge, Button, Form, Container } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport './styles.css';\nimport BackButtonOrden from './Buttons/BackButtonOrden';\nimport { Prev } from \"react-bootstrap/esm/PageItem\";\n\nimport platilloOrdenadoContext from '../context/platillosOrdenados/platilloOrdenadoContext';\n\n\nfunction Orden() {\n\n    const  platillosOrdenadossContext = useContext(platilloOrdenadoContext);\n    const { platilloOrdenadoOrden, obtenerPlatilloOrdenado, actualizarPlatilloOrdenado} = platillosOrdenadossContext;\n\n    useEffect(() => {\n        obtenerPlatilloOrdenado(localStorage.getItem('ordenid'))\n           \n        \n      },[]);\n\n      console.log(platilloOrdenadoOrden)\n\n    let history = useHistory();\n\n\n    const increaseCount= platillo => {\n       platillo.cantidad = platillo.cantidad+1;\n        actualizarPlatilloOrdenado(platillo)\n        history.push(\"/Orden\")\n    }\n\n    const decreaseCount= platillo => {\n        platillo.cantidad = platillo.cantidad-1;\n        actualizarPlatilloOrdenado(platillo)\n    }\n\n    var total = 0\n    platilloOrdenadoOrden.map(platillo => (\n        total = (platillo.precio * platillo.cantidad) + total\n    ))\n\n\n    return (\n        <Container fluid className=\"orden\">\n            <Row>\n                <Col className=\"\" >\n                    <BackButtonOrden className=\"boton-back-orden\"/>\n                </Col>\n                <Col className=\"titulo-carrito mt-4\" >\n                    <h1>Carrito</h1>\n                </Col>\n                <Col className=\"mt-4\" >\n                    <ShoppingCartIcon className=\"carrito\"/>\n                </Col>\n            </Row>\n            \n            <Row>\n                <Col className=\"mt-4 mb-2\">\n                    <h3>Entradas</h3>\n                </Col>\n            </Row>\n            <Row className=\"platillos\">\n                <Col>\n                {\n                platilloOrdenadoOrden.map(platillo => (\n                    <Card className=\"platillo-orden mb-2\">\n                    <Card.Text className=\"mr-4 ml-1 mt-3 mb-n2\">{platillo.nombre}</Card.Text>\n                    <Card.Text className=\"ml-4 mt-3\">${platillo.precio}</Card.Text>\n                    <IndeterminateCheckBoxIcon onClick={() =>decreaseCount(platillo)} className=\"menos mt-3\"/>\n                    <Card.Text className=\"platillo-orden-cantidad mt-3\">{parseInt(platillo.cantidad,10)}</Card.Text>\n                    <AddBoxIcon  onClick={() => increaseCount(platillo)} className=\"mas mt-3\"/>\n                </Card>\n                                ))}    \n                    \n                    \n                </Col>\n            </Row>\n            <Row className=\"total\">\n                <Col className=\"total-titulo\">\n                    <h1>Total</h1>\n                </Col>\n                <Col className=\"total-texto\">\n                    <h1>${total}</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col className=\"boton-ordenar\">\n                    <Link to={'/estatus'}>\n                        <Button className=\"confirmar\" variant=\"primary\">Confirmar</Button>\n                    </Link>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Orden;","import React, { useState,useContext, useEffect } from \"react\";\n\nimport { Card, Col, Row, Button, Container } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./styles.css\";\nimport Logo from \"./logo_waitqr.png\";\nimport { Link } from \"react-router-dom\";\n\nimport platilloOrdenadoContext from '../context/platillosOrdenados/platilloOrdenadoContext';\n\n\nfunction Estatus() {\n  let history = useHistory();\n\n  const  platillosOrdenadossContext = useContext(platilloOrdenadoContext);\n    const { platilloOrdenadoOrden, obtenerPlatilloOrdenado, actualizarPlatilloOrdenado} = platillosOrdenadossContext;\n\n  useEffect(() => {\n    obtenerPlatilloOrdenado(localStorage.getItem('ordenid'))\n       \n    \n  },[]);\n\n  return (\n    <Container className=\"estatus\" fluid>\n      <Row>\n        <Col className=\"estatus-titulo  ml-auto mr-auto\">\n          <h1>Tu √≥rden ha sido recibida</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h2>√ìrden #1</h2>\n        </Col>\n      </Row>\n      <Row className=\"resumen-orden-row\">\n      <Card className=\"resumen-orden-card ml-auto mr-auto \">\n      {\n                platilloOrdenadoOrden.map(platillo => (\n                   <span>\n                    <Card.Text className=\"nombre-platillo mt-1 ml-2 mb-n1\">{platillo.cantidad} X {platillo.nombre}</Card.Text>\n                    <Card.Text className=\"comentatrios-platillo ml-4\">{platillo.comentario}</Card.Text>\n                    </span>\n               \n                                ))}   \n        \n         \n          \n          \n          \n        </Card>\n      </Row>\n      <Row>\n        <Col className=\"logo-texto\">\n          <h3>Powered by</h3>\n        </Col>\n        <Col className=\"logo-estatus mr-auto ml-auto\">\n          <Card.Img className=\"logo\" variant=\"top\" src={Logo} />\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"boton-ordenar\">\n          <Link to={\"/MenuDigital\"}>\n            <Button className=\"confirmar mt-3\">Ordenar Algo M√°s</Button>\n          </Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Estatus;\n","export const FORMULARIO_RESTAURANTE = 'FORMULARIO_RESTAURANTE' \nexport const OBTENER_UN_RESTAURANTE = 'OBTENER_RESTAURANTES'\nexport const OBTENER_RESTAURANTES = 'OBTENER_RESTAURANTES' \nexport const AGREGAR_RESTAURANTE = 'AGREGAR_RESTAURANTE' \nexport const RESTAURANTE_ACTUAL = ' RESTAURANTE_ACTUAL'\nexport const ELIMINAR_RESTAURANTE = 'ELIMINAR_RESTAURANTE'\nexport const RESTAURANTE_ERROR = 'RESTAURANTE_ERROR'\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\n\n\nexport const MENUS_RESTAURANTE = 'MENUS_RESTAURANTE';\nexport const AGREGAR_MENU = 'AGREGAR_MENU';\nexport const VALIDAR_MENU = 'VALIDAR_MENU';\nexport const ELIMINAR_MENU = 'ELIMINAR_MENU'\nexport const ESTADO_MENU = \"ESTADO_MENU\"\nexport const MENU_ACTUAL = \"MENU_ACTUAL\";\nexport const ACTUALIZAR_MENU = 'ACTUALIZAR_MENU'\nexport const LIMPIAR_MENU = 'LIMPIAR_MENU'\n\nexport const MESAS_RESTAURANTE = 'MESAS_RESTAURANTE';\nexport const AGREGAR_MESA = 'AGREGAR_MESA';\nexport const VALIDAR_MESA = 'VALIDAR_MESA';\nexport const ELIMINAR_MESA = 'ELIMINAR_MESA'\nexport const ESTADO_MESA = \"ESTADO_MESA\"\nexport const MESA_ACTUAL = \"MESA_ACTUAL\";\nexport const ACTUALIZAR_MESA = 'ACTUALIZAR_MESA'\nexport const LIMPIAR_MESA = 'LIMPIAR_MESA'\n\n\nexport const SECCIONES_MENU = 'SECCIONES_MENU';\nexport const AGREGAR_SECCION = 'AGREGAR_SECCION';\nexport const VALIDAR_SECCION = 'VALIDAR_SECCION';\nexport const ELIMINAR_SECCION = 'ELIMINAR_SECCION'\nexport const ESTADO_SECCION = \"ESTADO_SECCION\"\nexport const SECCION_ACTUAL = \"SECCION_ACTUAL\";\nexport const ACTUALIZAR_SECCION = 'ACTUALIZAR_SECCION'\nexport const LIMPIAR_SECCION = 'LIMPIAR_SECCION'\n\nexport const PLATILLOS_SECCION = 'PLATILLOS_SECCION';\nexport const AGREGAR_PLATILLO = 'AGREGAR_PLATILLO';\nexport const VALIDAR_PLATILLO = 'VALIDAR_PLATILLO';\nexport const ELIMINAR_PLATILLO = 'ELIMINAR_PLATILLO'\nexport const ESTADO_PLATILLO = \"ESTADO_PLATILLO\"\nexport const PLATILLO_ACTUAL = \"PLATILLO_ACTUAL\";\nexport const ACTUALIZAR_PLATILLO = 'ACTUALIZAR_PLATILLO'\nexport const LIMPIAR_PLATILLO = 'LIMPIAR_PLATILLO'\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\n\nexport const REGISTRO_EXISTOSO = \"REGISTRO_EXITOSO\";\nexport const REGISTRO_ERROR = \"REGISTRO_ERROR\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const LOGIN_EXITOSO = \"LOGIN_EXITOSO\";\nexport const CERRAR_SESION = 'CERRAR_SESION';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\n \nexport const SESIONGENERAL_MESA = 'SESIONGENERAL_MESA';\nexport const AGREGAR_SESIONGENERAL = 'AGREGAR_SESIONGENERAL';\nexport const VALIDAR_SESIONGENERAL = 'VALIDAR_SESIONGENERAL';\nexport const ELIMINAR_SESIONGENERAL = 'ELIMINAR_SESIONGENERAL'\nexport const ESTADO_SESIONGENERAL = \"ESTADO_SESIONGENERAL\"\nexport const SESIONGENERAL_ACTUAL = \"SESIONGENERAL_ACTUAL\";\nexport const ACTUALIZAR_SESIONGENERAL = 'ACTUALIZAR_SESIONGENERAL'\nexport const LIMPIAR_SESIONGENERAL = 'LIMPIAR_SESIONGENERAL'\n\nexport const SESIONINDIVIDUAL_SESIONGENERAL = 'SESIONINDIVIDUAL_SESIONGENERAL';\nexport const AGREGAR_SESIONINDIVIDUAL =' AGREGAR_SESIONINDIVIDUAL';\nexport const VALIDAR_SESIONINDIVIDUAL = 'VALIDAR_SESIONINDIVIDUAL';\nexport const ELIMINAR_SESIONINDIVIDUAL = 'ELIMINAR_SESIONINDIVIDUAL'\nexport const ESTADO_SESIONINDIVIDUAL = \"ESTADO_SESIONINDIVIDUAL\"\nexport const SESIONINDIVIDUAL_ACTUAL = \"SESIONINDIVIDUAL_ACTUAL\";\nexport const ACTUALIZAR_SESIONINDIVIDUAL = 'ACTUALIZAR_SESIONINDIVIDUAL'\nexport const LIMPIAR_SESIONINDIVIDUAL = 'LIMPIAR_SESIONINDIVIDUAL'\n\nexport const ORDEN_SESIONINDIVIDUAL = 'ORDEN_SESIONINDIVIDUAL';\nexport const ORDEN_RESTAURANTE = 'ORDEN_RESTAURANTE';\nexport const AGREGAR_ORDEN =' AGREGAR_ORDEN';\nexport const VALIDAR_ORDEN = 'VALIDAR_ORDEN';\nexport const ELIMINAR_ORDEN = 'ELIMINAR_ORDEN'\nexport const ESTADO_ORDEN = \"ESTADO_ORDEN\"\nexport const ORDEN_ACTUAL = \"ORDEN_ACTUAL\";\nexport const ACTUALIZAR_ORDEN = 'ACTUALIZAR_ORDEN'\nexport const LIMPIAR_ORDEN = 'LIMPIAR_ORDEN'\n\nexport const PLATILLOORDENADO_ORDEN = 'PLATILLOORDENADO_ORDEN';\nexport const AGREGAR_PLATILLOORDENADO =' AGREGAR_PLATILLOORDENADO';\nexport const VALIDAR_PLATILLOORDENADO = 'VALIDAR_PLATILLOORDENADO';\nexport const ELIMINAR_PLATILLOORDENADO= 'ELIMINAR_PLATILLOORDENADO'\nexport const ESTADO_PLATILLOORDENADO = \"ESTADO_PLATILLOORDENADO\"\nexport const PLATILLOORDENADO_ACTUAL = \"PLATILLOORDENADO_ACTUAL\";\nexport const ACTUALIZAR_PLATILLOORDENADO = 'ACTUALIZAR_PLATILLOORDENADO'\nexport const LIMPIAR_PLATILLOORDENADO = 'LIMPIAR_PLATILLOORDENADO'\n","import {OBTENER_RESTAURANTES} from '../../types';\nimport {OBTENER_UN_RESTAURANTE} from '../../types';\nimport {RESTAURANTE_ACTUAL} from '../../types';\n\nexport default (state,action) =>{\n    switch(action.type){\n        \n        case OBTENER_RESTAURANTES:\n            console.log(action.payload)\n            return{\n                ...state,\n                restaurantes: action.payload\n            }\n            case OBTENER_UN_RESTAURANTE:\n            console.log(action.payload)\n            return{\n                ...state,\n                restaurantes: action.payload\n            }\n            case RESTAURANTE_ACTUAL:\n                return{\n                    ...state,\n                    restaurante:  action.payload \n                }\n        default:\n            return state;\n    }\n}","import axios from 'axios';\nconst clienteAxios = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL\n})\n\nexport default clienteAxios;","import React, {useReducer} from 'react';\n\nimport restauranteContext from './restauranteContext';\nimport restauranteReducer from './restauranteReducer';\nimport {FORMULARIO_RESTAURANTE} from '../../types';\nimport {OBTENER_UN_RESTAURANTE} from '../../types';\nimport {OBTENER_RESTAURANTES} from '../../types';\nimport {AGREGAR_RESTAURANTE} from '../../types';\nimport {VALIDAR_FORMULARIO} from '../../types';\nimport {RESTAURANTE_ACTUAL} from '../../types';\nimport {ELIMINAR_RESTAURANTE} from '../../types';\nimport {RESTAURANTE_ERROR} from '../../types';\n\n\n\nimport clienteAxios from '../../config/axios';\n\n\n\n\n\n\nconst RestauranteState = props => {\n    const initialState = {\n        formulario : false,\n        restaurantes:[],\n        errorformulario: false,\n        restaurante: null,\n        mensaje: null  \n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(restauranteReducer, initialState)\n\n    //serie de funciones para el crud\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_RESTAURANTE\n        })\n    }\n\n    //obtener los restaurantes\n    const obtenerRestaurantes = async () =>{\n        try {\n            const resultado = await clienteAxios.get('/api/restaurantes');\n\n            dispatch({\n                type: OBTENER_RESTAURANTES,\n                payload: resultado.data.restaurantes\n            })\n        } catch (error) {\n            //console.log(error)\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: RESTAURANTE_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    const obtenerUnRestaurante = async restaurante =>{\n        try {\n            const resultado = await clienteAxios.get('/api/restaurantes/restaurante',{params:{restaurante}});\n            console.log(resultado)\n            dispatch({\n                type: OBTENER_UN_RESTAURANTE,\n                payload: resultado.data.restaurantes\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    //valida el formlario por errores\n    const mostrarError = () =>{\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    //Selecciona el restaurante que el usuario dio click \n    const guardarRestauranteActual = restauranteId =>{\n        dispatch({\n            type: RESTAURANTE_ACTUAL,\n            payload: restauranteId\n        })\n    }\n  \n    \n\n    return(\n        <restauranteContext.Provider\n            value={{\n                formulario: state.formulario,\n                restaurantes: state.restaurantes,\n                errorformulario:state.errorformulario,\n                restaurante: state.restaurante,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerRestaurantes,\n                obtenerUnRestaurante,\n                mostrarError,\n                guardarRestauranteActual,\n            }}\n        >\n            {props.children}\n        </restauranteContext.Provider>  \n    )\n}\n\nexport default RestauranteState;","import {MESAS_RESTAURANTE} from '../../types'\nimport {AGREGAR_MESA} from '../../types'\nimport {VALIDAR_MESA} from '../../types'\nimport {ELIMINAR_MESA} from '../../types'\nimport {ESTADO_MESA} from '../../types'\nimport {MESA_ACTUAL} from '../../types'\nimport {ACTUALIZAR_MESA} from '../../types'\nimport {LIMPIAR_MESA} from '../../types'\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case MESAS_RESTAURANTE:\n            return{\n                ...state,\n                mesasrestaurante:action.payload\n            }\n        \n        case MESA_ACTUAL:\n        return{\n            ...state,\n            mesa: state.mesasrestaurante.filter(mesa => mesa._id === action.payload)\n        }\n        case LIMPIAR_MESA:\n            return{\n                ...state,\n                mesaseleccionada:null\n\n            }\n        \n            \n\n        default: \n        return state;\n    }\n}","import React, {useReducer} from 'react';\nimport MesaContext from './mesasContext';\nimport MesaReducer from './mesasReducer';\nimport {MESAS_RESTAURANTE} from '../../types'\nimport {MESA_ACTUAL} from '../../types'\nimport {LIMPIAR_MESA} from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst MesaState = props =>{\n    \n    const initialState ={\n        mesasrestaurante: [],\n        errormesa: false,\n        mesaseleccionada:null,\n        mesa:null\n\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(MesaReducer, initialState);\n\n    //crear las funciones\n\n\n    //obtener las mesas de un restaurante\n\n    const obtenerMesas = async restaurante =>{\n        try {\n            const resultado = await clienteAxios.get('/api/mesas',{params:{restaurante}});\n            console.log(resultado)\n            dispatch({\n                type: MESAS_RESTAURANTE,\n                payload: resultado.data.mesas\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    \n\n    //Extrae una tarea para edicion\n    const guardarMesaActual = mesaId =>{\n        dispatch({\n            type:MESA_ACTUAL,\n            payload: mesaId\n        })\n         \n    }\n\n    \n    //Elimina la mesaseleccionada\n\n    const limpiarMesa = () =>{\n        dispatch({\n            type: LIMPIAR_MESA\n        })\n    }\n\n    return (\n        <MesaContext.Provider\n            value ={{\n               // mesas: state.mesas,\n                mesasrestaurante: state.mesasrestaurante,\n                errormesa: state.errormesa,\n                mesaseleccionada: state.mesaseleccionada,\n                mesa: state.mesa,\n                obtenerMesas,\n                guardarMesaActual,\n                limpiarMesa\n            }}\n        >\n            {props.children}\n        </MesaContext.Provider>\n    )\n}\n\nexport default MesaState; ","import {MENUS_RESTAURANTE} from '../../types'\nimport {MENU_ACTUAL} from '../../types'\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case MENUS_RESTAURANTE:\n            return{\n                ...state,\n                menusrestaurante:action.payload\n            }\n        case MENU_ACTUAL:\n        return{\n            ...state,\n            menu: state.menusrestaurante.filter(menu => menu._id === action.payload)\n        }\n      \n        \n            \n\n        default: \n        return state;\n    }\n}","import React, {useReducer} from 'react';\nimport MenuContext from './menusContext';\nimport MenuReducer from './menusReducer';\nimport {MENUS_RESTAURANTE} from '../../types'\nimport {MENU_ACTUAL} from '../../types'\nimport {LIMPIAR_MENU} from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst MenuState = props =>{\n    \n    const initialState ={\n        menusrestaurante: [],\n        errormenu: false,\n        menuseleccionado:null,\n        menu:null\n\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(MenuReducer, initialState);\n\n    //crear las funciones\n\n\n    //obtener las menus de un restaurante\n\n    const obtenerMenus = async restaurante =>{\n        try {\n            const resultado = await clienteAxios.get('/api/menus',{params:{restaurante}});\n            console.log(resultado)\n            dispatch({\n                type: MENUS_RESTAURANTE,\n                payload: resultado.data.menus\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //Extrae una tarea para edicion\n    const guardarMenuActual = menuId =>{\n        dispatch({\n            type:MENU_ACTUAL,\n            payload: menuId\n        })\n         \n    }\n\n    \n    //Elimina la menuseleccionado\n\n    const limpiarMenu = () =>{\n        dispatch({\n            type: LIMPIAR_MENU\n        })\n    }\n\n    return (\n        <MenuContext.Provider\n            value ={{\n               // menus: state.menus,\n                menusrestaurante: state.menusrestaurante,\n                errormenu: state.errormenu,\n                menuseleccionado: state.menuseleccionado,\n                menu: state.menu,\n                obtenerMenus,\n                guardarMenuActual,\n                limpiarMenu\n            }}\n        >\n            {props.children}\n        </MenuContext.Provider>\n    )\n}\n\nexport default MenuState; ","import {SECCIONES_MENU} from '../../types'\nimport {AGREGAR_SECCION} from '../../types'\nimport {VALIDAR_SECCION} from '../../types'\nimport {ELIMINAR_SECCION} from '../../types'\nimport {ESTADO_SECCION} from '../../types'\nimport {SECCION_ACTUAL} from '../../types'\nimport {ACTUALIZAR_SECCION} from '../../types'\nimport {LIMPIAR_SECCION} from '../../types'\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case SECCIONES_MENU:\n            return{\n                ...state,\n                seccionesmenu:action.payload\n            }\n        case AGREGAR_SECCION:\n            return{\n                ...state,\n                seccionesmenu: [...state.seccionesmenu, action.payload],\n                errorseccion: false\n            }\n        case VALIDAR_SECCION:\n            return{\n                ...state,\n                errorseccion: true\n            }\n        case ELIMINAR_SECCION:\n            return{\n                ...state,\n                seccionesmenu: state.seccionesmenu.filter(seccion => seccion._id !== action.payload)\n            }\n        case ACTUALIZAR_SECCION:\n            return{\n                ...state,\n                seccionesmenu: state.seccionesmenu.map(seccion => seccion._id === action.payload._id \n                    ? action.payload\n                    : seccion)\n            }\n        case SECCION_ACTUAL:\n        return{\n            ...state,\n            seccion: state.seccionesmenu.filter(seccion => seccion._id === action.payload)\n        }\n        case LIMPIAR_SECCION:\n            return{\n                ...state,\n                seccionseleccionada:null\n\n            }\n        \n            \n\n        default: \n        return state;\n    }\n}","import React, {useReducer} from 'react';\nimport SeccionContext from './seccionesContext';\nimport SeccionReducer from './seccionesReducer';\nimport {SECCIONES_MENU} from '../../types'\nimport {AGREGAR_SECCION} from '../../types'\nimport {VALIDAR_SECCION} from '../../types'\nimport {ELIMINAR_SECCION} from '../../types'\nimport {ESTADO_SECCION} from '../../types'\nimport {SECCION_ACTUAL} from '../../types'\nimport {ACTUALIZAR_SECCION} from '../../types'\nimport {LIMPIAR_SECCION} from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst SeccionState = props =>{\n    \n    const initialState ={\n        seccionesmenu: [],\n        errormenu: false,\n        seccionseleccionada:null,\n        seccion: null\n\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(SeccionReducer, initialState);\n\n    //crear las funciones\n\n\n    //obtener las secciones de un menu\n \n    const obtenerSecciones = async menu =>{\n        try {\n            const resultado = await clienteAxios.get('/api/secciones',{params:{menu}});\n            console.log(resultado)\n            dispatch({\n                type: SECCIONES_MENU,\n                payload: resultado.data.secciones\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //agregar una seccion al menu seleccionado\n    const agregarSeccion = async  seccion =>{\n       // tarea.id = uuid.v4();\n        try {\n            const resultado = await clienteAxios.post('/api/secciones', seccion);\n            console.log(resultado)\n            dispatch({\n                type: AGREGAR_SECCION,\n                payload: seccion\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    //valida y muestra un error en caso de que sea necesario\n    const validarSeccion = () =>{\n        dispatch({\n            type: VALIDAR_SECCION\n        })\n    }\n\n    // Eliminar tarea por id\n    const eliminarSeccion = async (id, seccion) =>{\n        try {\n            await clienteAxios.delete(`/api/secciones/${id}`, {params: {seccion}});\n            dispatch({\n                type: ELIMINAR_SECCION,\n                payload: id\n            })\n        } catch (error) {\n            console.timeLog(error)\n        }\n    }\n\n   \n\n    //Edita o modifica una tarea\n    const actualizarSeccion = async seccion =>{\n        console.log(seccion);\n       try {\n           const resultado = await clienteAxios.put(`/api/secciones/${seccion._id}`,seccion);\n           console.log(resultado)\n        dispatch({\n            type: ACTUALIZAR_SECCION,\n            payload: resultado.data.seccion\n        })\n       } catch (error) {\n           console.log(error)\n       }\n    }\n    \n    const guardarSeccionActual= seccionId =>{\n        dispatch({\n            type:SECCION_ACTUAL,\n            payload: seccionId\n        })\n    }\n    \n    \n    //Elimina la menuseleccionado\n\n    const limpiarSeccion = () =>{\n        dispatch({\n            type: LIMPIAR_SECCION\n        })\n    }\n\n    return (\n        <SeccionContext.Provider\n            value ={{\n                seccionesmenu: state.seccionesmenu,\n                errormenu: state.errormenu,\n                seccionseleccionada: state.seccionseleccionada,\n                seccion: state.seccion,\n                obtenerSecciones,\n                agregarSeccion,\n                validarSeccion,\n                eliminarSeccion,\n                guardarSeccionActual,\n                actualizarSeccion,\n                limpiarSeccion\n            }}\n        >\n            {props.children}\n        </SeccionContext.Provider>\n    )\n}\n\nexport default SeccionState;","import {PLATILLOS_SECCION} from '../../types'\nimport {AGREGAR_PLATILLO} from '../../types'\nimport {VALIDAR_PLATILLO} from '../../types'\nimport {ELIMINAR_PLATILLO} from '../../types'\nimport {ESTADO_PLATILLO} from '../../types'\nimport {PLATILLO_ACTUAL} from '../../types'\nimport {ACTUALIZAR_PLATILLO} from '../../types'\nimport {LIMPIAR_PLATILLO} from '../../types'\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case PLATILLOS_SECCION:\n            return{\n                ...state,\n                platillosseccion:action.payload\n            }\n        case AGREGAR_PLATILLO:\n            return{\n                ...state,\n                platillosseccion: [...state.platillosseccion, action.payload],\n                errorplatillo: false\n            }\n        case VALIDAR_PLATILLO:\n            return{\n                ...state,\n                errorplatillo: true\n            }\n        case ELIMINAR_PLATILLO:\n            return{\n                ...state,\n                platillosseccion: state.platillosseccion.filter(platillo => platillo._id !== action.payload)\n            }\n        case ACTUALIZAR_PLATILLO:\n            return{\n                ...state,\n                platillosseccion: state.platillosseccion.map(platillo => platillo._id === action.payload._id \n                    ? action.payload\n                    : platillo)\n            }\n        case PLATILLO_ACTUAL:\n        return{\n            ...state,\n            platillo:  action.payload\n        }\n        case LIMPIAR_PLATILLO:\n            return{\n                ...state,\n                platilloseleccionado:null\n\n            }\n        \n            \n\n        default: \n        return state;\n    }\n}","import React, {useReducer} from 'react';\nimport PlatilloContext from './platillosContext';\nimport PlatilloReducer from './platillosReducer';\nimport {PLATILLOS_SECCION} from '../../types'\nimport {AGREGAR_PLATILLO} from '../../types'\nimport {VALIDAR_PLATILLO} from '../../types'\nimport {ELIMINAR_PLATILLO} from '../../types'\nimport {ESTADO_PLATILLO} from '../../types'\nimport {PLATILLO_ACTUAL} from '../../types'\nimport {ACTUALIZAR_PLATILLO} from '../../types'\nimport {LIMPIAR_PLATILLO} from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst PlatilloState = props =>{\n    \n    const initialState ={\n        platillosseccion: [],\n        errorseccion: false,\n        platilloseleccionado:null,\n        platillo: null\n\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(PlatilloReducer, initialState);\n\n    //crear las funciones\n\n\n    //obtener las platillos de un seccion\n\n    const obtenerPlatillos = async seccion =>{\n        try {\n            const resultado = await clienteAxios.get('/api/platillos',{params:{seccion}});\n            console.log(resultado)\n            dispatch({\n                type: PLATILLOS_SECCION,\n                payload: resultado.data.platillos\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //agregar una platillo al seccion seleccionado\n    const agregarPlatillo = async  platillo =>{\n       // tarea.id = uuid.v4();\n        try {\n            const resultado = await clienteAxios.post('/api/platillos', platillo);\n            console.log(resultado)\n            dispatch({\n                type: AGREGAR_PLATILLO,\n                payload: platillo\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    //valida y muestra un error en caso de que sea necesario\n    const validarPlatillo = () =>{\n        dispatch({\n            type: VALIDAR_PLATILLO\n        })\n    }\n\n    // Eliminar tarea por id\n    const eliminarPlatillo = async (id, platillo) =>{\n        try {\n            await clienteAxios.delete(`/api/platillos/${id}`, {params: {platillo}});\n            dispatch({\n                type: ELIMINAR_PLATILLO,\n                payload: id\n            })\n        } catch (error) {\n            console.timeLog(error)\n        }\n    }\n\n   \n\n    //Edita o modifica una tarea\n    const actualizarPlatillo = async platillo =>{\n        console.log(\"PLATILLO\",platillo);\n       try {\n           const resultado = await clienteAxios.put(`/api/platillos/${platillo._id}`,platillo);\n           console.log(resultado)\n        dispatch({\n            type: ACTUALIZAR_PLATILLO,\n            payload: resultado.data.platillo\n        })\n       } catch (error) {\n           console.log(error)\n       }\n    }\n    \n    const guardarPlatilloActual= platilloId =>{\n        dispatch({\n            type:PLATILLO_ACTUAL,\n            payload: platilloId\n        })\n    } \n    \n    \n    //Elimina la seccionseleccionado\n\n    const limpiarPlatillo = () =>{\n        dispatch({\n            type: LIMPIAR_PLATILLO\n        })\n    }\n\n    return (\n        <PlatilloContext.Provider\n            value ={{\n                platillosseccion: state.platillosseccion,\n                errorplatillo: state.errorplatillo,\n                platilloseleccionado: state.platilloseleccionado,\n                platillo: state.platillo,\n                obtenerPlatillos,\n                agregarPlatillo,\n                validarPlatillo,\n                eliminarPlatillo,\n                guardarPlatilloActual,\n                actualizarPlatillo,\n                limpiarPlatillo\n            }}\n        >\n            {props.children}\n        </PlatilloContext.Provider>\n    )\n}\n\nexport default PlatilloState;","import {SESIONGENERAL_MESA} from '../../types'\nimport {AGREGAR_SESIONGENERAL} from '../../types'\nimport {VALIDAR_SESIONGENERAL} from '../../types'\nimport {ELIMINAR_SESIONGENERAL} from '../../types'\nimport {ESTADO_SESIONGENERAL} from '../../types'\nimport {SESIONGENERAL_ACTUAL} from '../../types'\nimport {ACTUALIZAR_SESIONGENERAL} from '../../types'\nimport {LIMPIAR_SESIONGENERAL} from '../../types'\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case SESIONGENERAL_MESA:\n            return{\n                ...state,\n                sesiongeneralmesa:action.payload\n            }\n        case AGREGAR_SESIONGENERAL:\n            return{\n                ...state,\n                sesiongeneralmesa: [...state.sesiongeneralmesa, action.payload],\n                errorsesiongeneral: false\n            }\n        case VALIDAR_SESIONGENERAL:\n            return{\n                ...state,\n                errorsesiongeneral: true\n            }\n        case ELIMINAR_SESIONGENERAL:\n            return{\n                ...state,\n                sesiongeneralmesa: state.sesiongeneralmesa.filter(sesiongeneral => sesiongeneral._id !== action.payload)\n            }\n        case ACTUALIZAR_SESIONGENERAL:\n            return{\n                ...state,\n                sesiongeneralmesa: state.sesiongeneralmesa.map(sesiongeneral => sesiongeneral._id === action.payload._id \n                    ? action.payload\n                    : sesiongeneral)\n            }\n        case SESIONGENERAL_ACTUAL:\n        return{\n            ...state,\n            sesiongeneral: state.sesiongeneralmesa.filter(sesiongeneral => sesiongeneral._id === action.payload)\n        }\n        case LIMPIAR_SESIONGENERAL:\n            return{\n                ...state,\n                sesiongeneralseleccionada:null\n\n            }\n        \n            \n\n        default: \n        return state;\n    }\n}","import React, {useReducer} from 'react';\nimport SesionGeneralContext from './sesionGeneralContext';\nimport SesionGeneralReducer from './sesionGeneralReducer';\nimport {SESIONGENERAL_MESA} from '../../types'\nimport {AGREGAR_SESIONGENERAL} from '../../types'\nimport {VALIDAR_SESIONGENERAL} from '../../types'\nimport {ELIMINAR_SESIONGENERAL} from '../../types'\nimport {ESTADO_SESIONGENERAL} from '../../types'\nimport {SESIONGENERAL_ACTUAL} from '../../types'\nimport {ACTUALIZAR_SESIONGENERAL} from '../../types'\nimport {LIMPIAR_SESIONGENERAL} from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst SesionGeneralState = props =>{\n    \n    const initialState ={\n        sesiongeneralmesa: [],\n        errorsesiongeneral: false,\n        sesiongeneralseleccionada:null,\n        sesiongeneral:null\n\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(SesionGeneralReducer, initialState);\n\n    //crear las funciones\n\n \n    //obtener las menus de un restaurante\n\n    const obtenerSesionGeneral = async mesa =>{\n        try {\n            const resultado = await clienteAxios.get('/api/sesionesgenerales',{params:{mesa}});\n            console.log(resultado)\n            dispatch({\n                type: SESIONGENERAL_MESA,\n                payload: resultado.data.sesionesGenerales\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //agregar una tarea al restaurante seleccionado\n    const agregarSesionGeneral = async  sesiongeneral =>{\n       // tarea.id = uuid.v4();\n        try {\n            const resultado = await clienteAxios.post('/api/sesionesgenerales', sesiongeneral);\n            console.log(resultado)\n            localStorage.setItem('sesiongeneralid',resultado.data.sesionGeneral._id);\n            dispatch({\n                type: AGREGAR_SESIONGENERAL,\n                payload: sesiongeneral\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    //valida y muestra un error en caso de que sea necesario\n    const validarSesionGeneral = () =>{\n        dispatch({\n            type: VALIDAR_SESIONGENERAL\n        })\n    }\n\n    // Eliminar tarea por id\n    const eliminarSesionGeneral = async (id, mesa) =>{\n        try {\n            await clienteAxios.delete(`/api/sesionesgenerales/${id}`, {params: {mesa}});\n            dispatch({\n                type: ELIMINAR_SESIONGENERAL,\n                payload: id\n            })\n        } catch (error) {\n            console.timeLog(error)\n        }\n    }\n\n   \n\n    //Edita o modifica una tarea\n    const actualizarSesionGeneral = async sesiongeneral =>{\n        console.log(sesiongeneral);\n       try {\n           const resultado = await clienteAxios.put(`/api/sesionesgenerales/${sesiongeneral._id}`,sesiongeneral);\n           console.log(resultado)\n        dispatch({\n            type: ACTUALIZAR_SESIONGENERAL,\n            payload: resultado.data.sesiongeneral\n        })\n       } catch (error) {\n           console.log(error)\n       }\n    }\n    //Extrae una tarea para edicion\n    const guardarSesionGeneralActual = sesiongeneralId =>{\n        dispatch({\n            type:SESIONGENERAL_ACTUAL,\n            payload: sesiongeneralId\n        })\n         \n    }\n\n    \n    //Elimina la menuseleccionado\n\n    const limpiarSesionGeneral = () =>{\n        dispatch({\n            type: LIMPIAR_SESIONGENERAL\n        })\n    }\n\n    return (\n        <SesionGeneralContext.Provider\n            value ={{\n               // menus: state.menus,\n                sesiongeneralmesa: state.sesiongeneralmesa,\n                errorsesiongeneral: state.errorsesiongeneral,\n                sesiongeneralseleccionada: state.sesiongeneralseleccionada,\n                sesiongeneral: state.sesiongeneral,\n                obtenerSesionGeneral,\n                agregarSesionGeneral,\n                validarSesionGeneral,\n                eliminarSesionGeneral,\n                guardarSesionGeneralActual,\n                actualizarSesionGeneral,\n                limpiarSesionGeneral\n            }}\n        >\n            {props.children}\n        </SesionGeneralContext.Provider>\n    )\n}\n\nexport default SesionGeneralState; ","import {SESIONINDIVIDUAL_SESIONGENERAL} from '../../types'\nimport {AGREGAR_SESIONINDIVIDUAL} from '../../types'\nimport {VALIDAR_SESIONINDIVIDUAL} from '../../types'\nimport {ELIMINAR_SESIONINDIVIDUAL} from '../../types'\nimport {ESTADO_SESIONINDIVIDUAL} from '../../types'\nimport {SESIONINDIVIDUAL_ACTUAL} from '../../types'\nimport {ACTUALIZAR_SESIONINDIVIDUAL} from '../../types'\nimport {LIMPIAR_SESIONINDIVIDUAL} from '../../types'\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case SESIONINDIVIDUAL_SESIONGENERAL:\n            return{\n                ...state,\n                sesionindividualsesiongeneral:action.payload\n            }\n        case AGREGAR_SESIONINDIVIDUAL:\n\n            return{\n                ...state,\n                sesionindividualsesiongeneral: [...state.sesionindividualsesiongeneral, action.payload],\n                errorsesionindividual: false\n            }\n        case VALIDAR_SESIONINDIVIDUAL:\n            return{\n                ...state,\n                errorsesionindividual: true\n            }\n        case ELIMINAR_SESIONINDIVIDUAL:\n            return{\n                ...state,\n                sesionindividualsesiongeneral: state.sesionindividualsesiongeneral.filter(sesionindividual => sesionindividual._id !== action.payload)\n            }\n        case ACTUALIZAR_SESIONINDIVIDUAL:\n            return{\n                ...state,\n                sesionindividualsesiongeneral: state.sesionindividualsesiongeneral.map(sesionindividual => sesionindividual._id === action.payload._id \n                    ? action.payload\n                    : sesionindividual)\n            }\n        case SESIONINDIVIDUAL_ACTUAL:\n        return{\n            ...state,\n            sesionindividual: state.sesionindividualsesiongeneral.filter(sesionindividual => sesionindividual._id === action.payload)\n        }\n        case LIMPIAR_SESIONINDIVIDUAL:\n            return{\n                ...state,\n                sesionindividualseleccionada:null\n\n            }\n        \n            \n\n        default: \n        return state;\n    }\n}","import React, {useReducer} from 'react';\nimport SesionIndividualContext from './sesionIndividualContext';\nimport SesionIndividualReducer from './sesionIndividualReducer';\nimport {SESIONINDIVIDUAL_SESIONGENERAL} from '../../types'\nimport {AGREGAR_SESIONINDIVIDUAL} from '../../types'\nimport {VALIDAR_SESIONINDIVIDUAL} from '../../types'\nimport {ELIMINAR_SESIONINDIVIDUAL} from '../../types'\nimport {ESTADO_SESIONINDIVIDUAL} from '../../types'\nimport {SESIONINDIVIDUAL_ACTUAL} from '../../types'\nimport {ACTUALIZAR_SESIONINDIVIDUAL} from '../../types'\nimport {LIMPIAR_SESIONINDIVIDUAL} from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst SesionIndividualState = props =>{\n    \n    const initialState ={\n        sesionindividualsesiongeneral: [],\n        errorsesionindividual: false,\n        sesionindividualseleccionada:null,\n        sesionindividual:null\n\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(SesionIndividualReducer, initialState);\n\n    //crear las funciones\n\n\n    //obtener las menus de un restaurante\n\n    const obtenerSesionIndividual = async sesionGeneral =>{\n        try {\n            const resultado = await clienteAxios.get('/api/sesionesindividuales',{params:{sesionGeneral}});\n            console.log(resultado)\n            dispatch({\n                type: SESIONINDIVIDUAL_SESIONGENERAL,\n                payload: resultado.data.sesionesIndividuales\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //agregar una tarea al restaurante seleccionado\n    const agregarSesionIndividual = async  sesionindividual =>{\n       // tarea.id = uuid.v4();\n        try {\n            const resultado = await clienteAxios.post('/api/sesionesindividuales', sesionindividual);\n            console.log(resultado)\n            localStorage.setItem('sesionindividualid',resultado.data.sesionIndividual._id);\n\n            dispatch({\n                type: AGREGAR_SESIONINDIVIDUAL,\n                payload: sesionindividual\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    //valida y muestra un error en caso de que sea necesario\n    const validarSesionIndividual = () =>{\n        dispatch({\n            type: VALIDAR_SESIONINDIVIDUAL\n        })\n    }\n\n    // Eliminar tarea por id\n    const eliminarSesionIndividual = async (id, sesiongeneral) =>{\n        try {\n            await clienteAxios.delete(`/api/sesionesindividuales/${id}`, {params: {sesiongeneral}});\n            dispatch({\n                type: ELIMINAR_SESIONINDIVIDUAL,\n                payload: id\n            })\n        } catch (error) {\n            console.timeLog(error)\n        }\n    }\n\n   \n\n    //Edita o modifica una tarea\n    const actualizarSesionIndividual = async sesionindividual =>{\n        console.log(sesionindividual);\n       try {\n           const resultado = await clienteAxios.put(`/api/sesionesindividuales/${sesionindividual._id}`,sesionindividual);\n           console.log(resultado)\n        dispatch({\n            type: ACTUALIZAR_SESIONINDIVIDUAL,\n            payload: resultado.data.sesionindividual\n        })\n       } catch (error) {\n           console.log(error)\n       }\n    }\n    //Extrae una tarea para edicion\n    const guardarSesionIndividualActual = sesionindividualId =>{\n        dispatch({\n            type:SESIONINDIVIDUAL_ACTUAL,\n            payload: sesionindividualId\n        })\n         \n    }\n\n    \n    //Elimina la menuseleccionado\n\n    const limpiarSesionIndividual = () =>{\n        dispatch({\n            type: LIMPIAR_SESIONINDIVIDUAL\n        })\n    }\n\n    return (\n        <SesionIndividualContext.Provider\n            value ={{\n               // menus: state.menus,\n                sesionindividualsesiongeneral: state.sesionindividualsesiongeneral,\n                errorsesionindividual: state.errorsesionindividual,\n                sesionindividualseleccionada: state.sesionindividualseleccionada,\n                sesionindividual: state.sesionindividual,\n                obtenerSesionIndividual,\n                agregarSesionIndividual,\n                validarSesionIndividual,\n                eliminarSesionIndividual,\n                guardarSesionIndividualActual,\n                actualizarSesionIndividual,\n                limpiarSesionIndividual\n            }}\n        >\n            {props.children}\n        </SesionIndividualContext.Provider>\n    )\n}\n\nexport default SesionIndividualState; ","import {ORDEN_SESIONINDIVIDUAL} from '../../types'\nimport {ORDEN_RESTAURANTE} from '../../types'\nimport {AGREGAR_ORDEN} from '../../types'\nimport {VALIDAR_ORDEN} from '../../types'\nimport {ELIMINAR_ORDEN} from '../../types'\nimport {ESTADO_ORDEN} from '../../types'\nimport {ORDEN_ACTUAL} from '../../types'\nimport {ACTUALIZAR_ORDEN} from '../../types'\nimport {LIMPIAR_ORDEN} from '../../types'\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case ORDEN_SESIONINDIVIDUAL:\n            return{\n                ...state,\n                ordensesionindividual:action.payload\n            }\n            case ORDEN_RESTAURANTE:\n            return{\n                ...state,\n                ordenrestaurante:action.payload\n            }\n        case AGREGAR_ORDEN:\n            return{\n                ...state,\n                ordensesionindividual: [...state.ordensesionindividual, action.payload],\n                errororden: false\n            }\n        case VALIDAR_ORDEN:\n            return{\n                ...state,\n                errororden: true\n            }\n        case ELIMINAR_ORDEN:\n            return{\n                ...state,\n                ordensesionindividual: state.ordensesionindividual.filter(orden => orden._id !== action.payload)\n            }\n        case ACTUALIZAR_ORDEN:\n            return{\n                ...state,\n                ordensesionindividual: state.ordensesionindividual.map(orden => orden._id === action.payload._id \n                    ? action.payload\n                    : orden)\n            }\n        case ORDEN_ACTUAL:\n        return{\n            ...state,\n            orden: state.ordensesionindividual.filter(orden => orden._id === action.payload)\n        }\n        case LIMPIAR_ORDEN:\n            return{\n                ...state,\n                ordenseleccionada:null\n\n            }\n        \n            \n\n        default: \n        return state;\n    }\n}","import React, {useReducer} from 'react';\nimport OrdenContext from './ordenContext';\nimport OrdenReducer from './ordenReducer';\nimport {ORDEN_SESIONINDIVIDUAL} from '../../types'\nimport {ORDEN_RESTAURANTE} from '../../types'\nimport {AGREGAR_ORDEN} from '../../types'\nimport {VALIDAR_ORDEN} from '../../types'\nimport {ELIMINAR_ORDEN} from '../../types'\nimport {ESTADO_ORDEN} from '../../types'\nimport {ORDEN_ACTUAL} from '../../types'\nimport {ACTUALIZAR_ORDEN} from '../../types'\nimport {LIMPIAR_ORDEN} from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst OrdenState = props =>{\n    \n    const initialState ={\n        ordenrestaurante:[],\n        ordensesionindividual: [],\n        errororden: false,\n        ordenseleccionada:null,\n        orden:null\n\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(OrdenReducer, initialState);\n\n    //crear las funciones\n\n\n    //obtener las menus de un restaurante\n\n    const obtenerOrdenSesionIndividual = async sesionindividual =>{\n        try {\n            const resultado = await clienteAxios.get('/api/ordenes/sesionIndividual',{params:{sesionindividual}});\n            console.log(resultado)\n            dispatch({\n                type: ORDEN_SESIONINDIVIDUAL,\n                payload: resultado.data.ordenes\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const obtenerOrdenRestaurante = async restaurante =>{\n        try {\n            const resultado = await clienteAxios.get('/api/ordenes/restaurante',{params:{restaurante}});\n            console.log(resultado)\n            dispatch({\n                type: ORDEN_RESTAURANTE,\n                payload: resultado.data.ordenes\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //agregar una tarea al restaurante seleccionado\n    const agregarOrden = async  orden =>{\n       // tarea.id = uuid.v4();\n        try {\n            const resultado = await clienteAxios.post('/api/ordenes', orden);\n            console.log(resultado)\n            localStorage.setItem('ordenid',resultado.data.orden._id);\n            dispatch({\n                type: AGREGAR_ORDEN,\n                payload: orden\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    //valida y muestra un error en caso de que sea necesario\n    const validarOrden = () =>{\n        dispatch({\n            type: VALIDAR_ORDEN\n        })\n    }\n\n    // Eliminar tarea por id\n    const eliminarOrden = async (id, sesionindividual) =>{\n        try {\n            await clienteAxios.delete(`/api/ordenes/${id}`, {params: {sesionindividual}});\n            dispatch({\n                type: ELIMINAR_ORDEN,\n                payload: id\n            })\n        } catch (error) {\n            console.timeLog(error)\n        }\n    }\n\n   \n\n    //Edita o modifica una tarea\n    const actualizarOrden = async orden =>{\n        console.log(orden);\n       try {\n           const resultado = await clienteAxios.put(`/api/ordenes/${orden._id}`,orden);\n           console.log(resultado)\n        dispatch({\n            type: ACTUALIZAR_ORDEN,\n            payload: resultado.data.orden\n        })\n       } catch (error) {\n           console.log(error)\n       }\n    }\n    //Extrae una tarea para edicion\n    const guardarOrdenActual = ordenId =>{\n        dispatch({\n            type:ORDEN_ACTUAL,\n            payload: ordenId\n        })\n         \n    }\n\n    \n    //Elimina la menuseleccionado\n\n    const limpiarOrden = () =>{\n        dispatch({\n            type: LIMPIAR_ORDEN\n        })\n    }\n\n    return (\n        <OrdenContext.Provider\n            value ={{\n               // menus: state.menus,\n                ordensesionindividual: state.ordensesionindividual,\n                ordenrestaurante: state.ordenrestaurante,\n                errororden: state.errororden,\n                ordenseleccionada: state.ordenseleccionada,\n                orden: state.orden,\n                obtenerOrdenSesionIndividual,\n                obtenerOrdenRestaurante,\n                agregarOrden,\n                validarOrden,\n                eliminarOrden,\n                guardarOrdenActual,\n                actualizarOrden,\n                limpiarOrden\n            }}\n        >\n            {props.children}\n        </OrdenContext.Provider>\n    )\n}\n\nexport default OrdenState; ","import {PLATILLOORDENADO_ORDEN} from '../../types'\nimport {AGREGAR_PLATILLOORDENADO} from '../../types'\nimport {VALIDAR_PLATILLOORDENADO} from '../../types'\nimport {ELIMINAR_PLATILLOORDENADO} from '../../types'\nimport {ESTADO_PLATILLOORDENADO} from '../../types'\nimport {PLATILLOORDENADO_ACTUAL} from '../../types'\nimport {ACTUALIZAR_PLATILLOORDENADO} from '../../types'\nimport {LIMPIAR_PLATILLOORDENADO} from '../../types'\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case PLATILLOORDENADO_ORDEN:\n            return{\n                ...state,\n                platilloOrdenadoOrden:action.payload\n            }\n        case AGREGAR_PLATILLOORDENADO:\n            return{\n                ...state,\n                platilloOrdenadoOrden: [...state.platilloOrdenadoOrden, action.payload],\n                errorplatilloordenado: false\n            }\n        case VALIDAR_PLATILLOORDENADO:\n            return{\n                ...state,\n                errorplatilloordenado: true\n            }\n        case ELIMINAR_PLATILLOORDENADO:\n            return{\n                ...state,\n                platilloOrdenadoOrden: state.platilloOrdenadoOrden.filter(platilloOrdenado => platilloOrdenado._id !== action.payload)\n            }\n        case ACTUALIZAR_PLATILLOORDENADO:\n            return{\n                ...state,\n                platilloOrdenadoOrden: state.platilloOrdenadoOrden.map(platilloOrdenado =>\n                    console.log(platilloOrdenado)\n                    ? action.payload\n                    : platilloOrdenado)\n            }\n        case PLATILLOORDENADO_ACTUAL:\n        return{\n            ...state,\n            orden: state.platilloOrdenadoOrden.filter(platilloOrdenado => platilloOrdenado._id === action.payload)\n        }\n        case LIMPIAR_PLATILLOORDENADO:\n            return{\n                ...state,\n                platilloordenadoseleccionado:null\n\n            }\n        \n            \n\n        default: \n        return state;\n    }\n}","import React, {useReducer} from 'react';\nimport PlatilloOrdenadoContext from './platilloOrdenadoContext';\nimport PlatilloOrdenadoReducer from './platilloOrdenadoReducer';\nimport {PLATILLOORDENADO_ORDEN} from '../../types'\nimport {AGREGAR_PLATILLOORDENADO} from '../../types'\nimport {VALIDAR_PLATILLOORDENADO} from '../../types'\nimport {ELIMINAR_PLATILLOORDENADO} from '../../types'\nimport {ESTADO_PLATILLOORDENADO} from '../../types'\nimport {PLATILLOORDENADO_ACTUAL} from '../../types'\nimport {ACTUALIZAR_PLATILLOORDENADO} from '../../types'\nimport {LIMPIAR_PLATILLOORDENADO} from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst PlatilloOrdenadoState = props =>{\n    \n    const initialState ={\n        platilloOrdenadoOrden: [],\n        errorplatilloordenado: false,\n        platilloordenadoseleccionado:null,\n        platilloordenado:null\n\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(PlatilloOrdenadoReducer, initialState);\n\n    //crear las funciones\n\n\n    //obtener las menus de un restaurante\n\n    const obtenerPlatilloOrdenado = async orden =>{\n        try {\n            const resultado = await clienteAxios.get('/api/platilloOrdenado',{params:{orden}});\n            console.log(resultado)\n            dispatch({\n                type: PLATILLOORDENADO_ORDEN,\n                payload: resultado.data.platillosOrdenados\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //agregar una tarea al restaurante seleccionado\n    const agregarPlatilloOrdenado = async  platilloordenado =>{\n       // tarea.id = uuid.v4();\n        try {\n            const resultado = await clienteAxios.post('/api/platilloOrdenado', platilloordenado);\n            console.log(resultado)\n            dispatch({\n                type: AGREGAR_PLATILLOORDENADO,\n                payload: platilloordenado\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    //valida y muestra un error en caso de que sea necesario\n    const validarPlatilloOrdenado = () =>{\n        dispatch({\n            type: VALIDAR_PLATILLOORDENADO\n        })\n    }\n\n    // Eliminar tarea por id\n    const eliminarPlatilloOrdenado = async (id, orden) =>{\n        try {\n            await clienteAxios.delete(`/api/platilloOrdenado/${id}`, {params: {orden}});\n            dispatch({\n                type: ELIMINAR_PLATILLOORDENADO,\n                payload: id\n            })\n        } catch (error) {\n            console.timeLog(error)\n        }\n    }\n\n   \n\n    //Edita o modifica una tarea\n    const actualizarPlatilloOrdenado = async platilloordenado =>{\n        console.log(platilloordenado);\n       try {\n           const resultado = await clienteAxios.put(`/api/platilloOrdenado/${platilloordenado._id}`,platilloordenado);\n           console.log(resultado)\n        dispatch({\n            type: ACTUALIZAR_PLATILLOORDENADO,\n            payload: resultado.data.platilloordenado\n        })\n       } catch (error) {\n           console.log(error)\n       }\n    }\n    //Extrae una tarea para edicion\n    const guardarPlatilloOrdenadoActual = platilloordenadoId =>{\n        dispatch({\n            type: PLATILLOORDENADO_ACTUAL,\n            payload: platilloordenadoId\n        })\n         \n    }\n\n    \n    //Elimina la menuseleccionado\n\n    const limpiarPlatilloOrdenado = () =>{\n        dispatch({\n            type: LIMPIAR_PLATILLOORDENADO\n        })\n    }\n\n    return (\n        <PlatilloOrdenadoContext.Provider\n            value ={{\n               // menus: state.menus,\n                platilloOrdenadoOrden: state.platilloOrdenadoOrden,\n                errorplatilloordenado: state.errorplatilloordenado,\n                platilloordenadoseleccionado: state.platilloordenadoseleccionado,\n                platilloordenado: state.platilloordenado,\n                obtenerPlatilloOrdenado,\n                agregarPlatilloOrdenado,\n                validarPlatilloOrdenado,\n                eliminarPlatilloOrdenado,\n                guardarPlatilloOrdenadoActual,\n                actualizarPlatilloOrdenado,\n                limpiarPlatilloOrdenado\n            }}\n        >\n            {props.children}\n        </PlatilloOrdenadoContext.Provider>\n    )\n}\n\nexport default PlatilloOrdenadoState; ","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\nimport Welcome from './components/Welcome';\nimport MenuDigital from './components/MenuDigital.js';\nimport DetallePlatillo from './components/DetallePlatillo';\nimport Orden from './components/Orden'\nimport Estatus from './components/Estatus'\n\nimport RestauranteState from './context/restaurantes/restauranteState';\nimport MesaState from './context/mesas/mesasState';\nimport MenuState from './context/menus/menusState';\nimport SeccionState from './context/secciones/seccionesState';\nimport PlatillosState from './context/platillos/platillosState';\nimport SesionGeneralState from './context/sesionesGenerales/sesionGeneralState';\nimport SesionIndividualState from './context/sesionesIndividuales/sesionIndividualState';\nimport OrdenState from './context/ordenes/ordenState';\nimport PlatilloOrdenadoState from './context/platillosOrdenados/platilloOrdenadoState';\n\n\n// lol\n\nfunction App() {\n   \n  console.log(process.env.REACT_APP_BACKEND_URL);\n\n  return (\n    <RestauranteState>\n      <MesaState>\n        <MenuState>\n          <SeccionState>\n            <PlatillosState>\n              <SesionGeneralState>\n                <SesionIndividualState>\n                  <OrdenState>\n                    <PlatilloOrdenadoState>\n               \n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Welcome} />\n            <Route exact path=\"/MenuDigital\" component={MenuDigital} />\n            <Route exact path=\"/DetallePlatillo\" component={DetallePlatillo} />\n            <Route exact path=\"/Orden\" component={Orden} />\n            <Route exact path=\"/Estatus\" component={Estatus} />\n          </Switch>\n        </Router>\n       </PlatilloOrdenadoState>\n        </OrdenState>\n        </SesionIndividualState>\n        </SesionGeneralState>\n        </PlatillosState>\n        </SeccionState>\n        </MenuState>\n        </MesaState>\n        </RestauranteState>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}